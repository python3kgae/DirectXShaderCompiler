<?xml version="1.0"?>
<Data>
    <Table Id="UnaryFloatOpTable">
      <ParameterTypes>
        <ParameterType Name="Validation.Type">String</ParameterType>
        <ParameterType Name="Validation.Tolerance">double</ParameterType>
        <ParameterType Name="Validation.Input" Array="true">String</ParameterType>
        <ParameterType Name="Validation.Expected" Array="true">String</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
      </ParameterTypes>

      <Row Name="sin">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-314.16</Value>
          <Value>314.16</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>NaN</Value>
          <Value>-0.0007346401</Value>
          <Value>0.0007346401</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            [RootSignature("RootFlags(0), UAV(u0)")]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = sin(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="cos">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-314.16</Value>
          <Value>314.16</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>NaN</Value>
          <Value>0.99999973015</Value>
          <Value>0.99999973015</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = cos(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="tan">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-314.16</Value>
          <Value>314.16</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-0.0</Value>
          <Value>-0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>NaN</Value>
          <Value>-0.000735</Value>
          <Value>0.000735</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = tan(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="Hcos">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>Inf</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>1.0</Value>
          <Value>Inf</Value>
          <Value>1.543081</Value>
          <Value>1.543081</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = cosh(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="Hsin">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>Inf</Value>
          <Value>1.175201</Value>
          <Value>-1.175201</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = sinh(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="Htan">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-0.0</Value>
          <Value>-0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>NaN</Value>
          <Value>0.761594</Value>
          <Value>-0.761594</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = tanh(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="acos">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
          <Value>1.5</Value>
          <Value>-1.5</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>1.570796</Value>
          <Value>1.570796</Value>
          <Value>1.570796</Value>
          <Value>1.570796</Value>
          <Value>NaN</Value>
          <Value>0</Value>
          <Value>3.1415926</Value>
          <Value>NaN</Value>
          <Value>NaN</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = acos(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="asin">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
          <Value>1.5</Value>
          <Value>-1.5</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>NaN</Value>
          <Value>1.570796</Value>
          <Value>-1.570796</Value>
          <Value>NaN</Value>
          <Value>NaN</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = asin(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="atan">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>-1</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>0.785410</Value>
          <Value>-1.570796</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>0.0</Value>
          <Value>1.570796</Value>
          <Value>0.785398163</Value>
          <Value>-0.785398163</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = atan(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="exp">
        <Parameter Name="Validation.Type">Relative</Parameter>
        <Parameter Name="Validation.Tolerance">21</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>10</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>0</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>Inf</Value>
          <Value>0.367879441</Value>
          <Value>22026.46579</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = exp(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="frc">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0.0008</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>2.718280</Value>
          <Value>1000.599976</Value>
          <Value>-7.389</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>NaN</Value>
          <Value>0</Value>
          <Value>0.718280</Value>
          <Value>0.599976</Value>
          <Value>0.611</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = frac(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="log">
        <Parameter Name="Validation.Type">Relative</Parameter>
        <Parameter Name="Validation.Tolerance">21</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>2.718281828</Value>
          <Value>7.389056</Value>
          <Value>100</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-Inf</Value>
          <Value>-Inf</Value>
          <Value>-Inf</Value>
          <Value>Inf</Value>
          <Value>NaN</Value>
          <Value>1.0</Value>
          <Value>1.99999998</Value>
          <Value>4.6051701</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = log(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>
      <Row Name="sqrt">
        <Parameter Name="Validation.Type">ulp</Parameter>
        <Parameter Name="Validation.Tolerance">1</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>2</Value>
          <Value>16.0</Value>
          <Value>256.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>Inf</Value>
          <Value>NaN</Value>
          <Value>1.41421356237</Value>
          <Value>4.0</Value>
          <Value>16.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = sqrt(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="rsqrt">
        <Parameter Name="Validation.Type">ulp</Parameter>
        <Parameter Name="Validation.Tolerance">1</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>16.0</Value>
          <Value>256.0</Value>
          <Value>65536.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-Inf</Value>
          <Value>Inf</Value>
          <Value>Inf</Value>
          <Value>0</Value>
          <Value>NaN</Value>
          <Value>0.25</Value>
          <Value>0.0625</Value>
          <Value>0.00390625</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = rsqrt(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

       <Row Name="rsqrt">
        <Parameter Name="Validation.Type">ulp</Parameter>
        <Parameter Name="Validation.Tolerance">1</Parameter>
        <Parameter Name="Validation.NumInput">11</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>-1</Value>
          <Value>16.0</Value>
          <Value>256.0</Value>
          <Value>65536.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-Inf</Value>
          <Value>Inf</Value>
          <Value>Inf</Value>
          <Value>0</Value>
          <Value>NaN</Value>
          <Value>0.25</Value>
          <Value>0.0625</Value>
          <Value>0.00390625</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = rsqrt(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="round_ne">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">16</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.4</Value>
          <Value>10.5</Value>
          <Value>10.6</Value>
          <Value>11.5</Value>
          <Value>-10.0</Value>
          <Value>-10.4</Value>
          <Value>-10.5</Value>
          <Value>-10.6</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>11.0</Value>
          <Value>12.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-11.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = round(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="round_ni">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">15</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.4</Value>
          <Value>10.5</Value>
          <Value>10.6</Value>
          <Value>-10.0</Value>
          <Value>-10.4</Value>
          <Value>-10.5</Value>
          <Value>-10.6</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>-10.0</Value>
          <Value>-11.0</Value>
          <Value>-11.0</Value>
          <Value>-11.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = floor(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
       </Row>

       <Row Name="round_pi">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">15</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.4</Value>
          <Value>10.5</Value>
          <Value>10.6</Value>
          <Value>-10.0</Value>
          <Value>-10.4</Value>
          <Value>-10.5</Value>
          <Value>-10.6</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>11.0</Value>
          <Value>11.0</Value>
          <Value>11.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = ceil(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="round_z">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">15</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.4</Value>
          <Value>10.5</Value>
          <Value>10.6</Value>
          <Value>-10.0</Value>
          <Value>-10.4</Value>
          <Value>-10.5</Value>
          <Value>-10.6</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-0</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>Inf</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
          <Value>-10.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = trunc(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="IsNaN">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1.0</Value>
          <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>1</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                if (isnan(l.input))
                    l.output = 1;
                else
                    l.output = 0;
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>
      <Row Name="IsInf">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1.0</Value>
          <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>0</Value>
          <Value>1</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>1</Value>
          <Value>0</Value>
          <Value>0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                if (isinf(l.input))
                    l.output = 1;
                else
                    l.output = 0;
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>
      <Row Name="Isfinite">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1.0</Value>
          <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>1</Value>
          <Value>0</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>1</Value>
          <Value>0</Value>
          <Value>1</Value>
          <Value>1</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                if (isfinite(l.input))
                    l.output = 1;
                else
                    l.output = 0;
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>

      <Row Name="FAbs">
        <Parameter Name="Validation.Type">Epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
          <Value>NaN</Value>
          <Value>-Inf</Value>
          <Value>-denorm</Value>
          <Value>-0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1.0</Value>
          <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
          <Value>NaN</Value>
          <Value>Inf</Value>
          <Value>denorm</Value>
          <Value>0</Value>
          <Value>0</Value>
          <Value>denorm</Value>
          <Value>Inf</Value>
          <Value>1</Value>
          <Value>1</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">CS</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text"><![CDATA[
            struct SUnaryFPOp {
                float input;
                float output;
            };
            RWStructuredBuffer<SUnaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryFPOp l = g_buf[GI];
                l.output = abs(l.input);
                g_buf[GI] = l;
            }
           ]]></Parameter>
      </Row>
    </Table>
    <Table Id="BinaryFloatOpTable">
      <ParameterTypes>
        <ParameterType Name="Validation.Type">String</ParameterType>
        <ParameterType Name="Validation.Tolerance">double</ParameterType>
        <ParameterType Name="Validation.Input1" Array="true">String</ParameterType>
        <ParameterType Name="Validation.Input2" Array="true">String</ParameterType>
        <ParameterType Name="Validation.Expected1" Array="true">String</ParameterType>
        <ParameterType Name="Validation.Expected2" Array="true">String</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
      </ParameterTypes>

      <Row Name="MinMax">
        <Parameter Name="Validation.Type">epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">17</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>NaN</Value>
            <Value>NaN</Value>
            <Value>NaN</Value>
            <Value>NaN</Value>
            <Value>1.0</Value>
            <Value>1.0</Value>
            <Value>-1.0</Value>
            <Value>-1.0</Value>
            <Value>1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>inf</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>-inf</Value>
            <Value>1.0</Value>
            <Value>-1.0</Value>
            <Value>-1.0</Value>
            <Value>-1.0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected2">
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>inf</Value>
            <Value>-inf</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>NaN</Value>
            <Value>1.0</Value>
            <Value>inf</Value>
            <Value>1.0</Value>
            <Value>-1.0</Value>
            <Value>1.0</Value>
        </Parameter>
        <Parameter Name="ShaderOp.Name">MinMax</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
            <![CDATA[
            struct SBinaryFPOp {
                float input1;
                float input2;
                float output1;
                float output2;
            };
            RWStructuredBuffer<SBinaryFPOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryFPOp l = g_buf[GI];
                l.output1 = min(l.input1, l.input2);
                l.output2 = max(l.input1, l.input2);
                g_buf[GI] = l;
            };
            ]]>
        </Parameter>
      </Row>

      </Table>

      <Table Id="TertiaryFloatOpTable">
        <ParameterTypes>
            <ParameterType Name="Description">String</ParameterType>
            <ParameterType Name="ShaderOp.Name">String</ParameterType>
            <ParameterType Name="ShaderOp.Target">String</ParameterType>
            <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
            <ParameterType Name="ShaderOp.Text">String</ParameterType>
            <ParameterType Name="Validation.Type">String</ParameterType>
            <ParameterType Name="Validation.Tolerance">int</ParameterType>
            <ParameterType Name="Validation.Input1" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Input2" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Input3" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Expected" Array="true">String</ParameterType>
            <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        </ParameterTypes>

        <Row Name="FMad">
            <Parameter Name="ShaderOp.Name">FMad</Parameter>
            <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
            <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
            <Parameter Name="ShaderOp.Text">
            <![CDATA[
                struct STertiaryFloatOp {
                    float input1;
                    float input2;
                    float input3;
                    float output;
                };
                RWStructuredBuffer<STertiaryFloatOp> g_buf : register(u0);
                [numthreads(8,8,1)]
                void main(uint GI : SV_GroupIndex) {
                    STertiaryFloatOp l = g_buf[GI];
                    l.output = mad(l.input1, l.input2, l.input3);
                    g_buf[GI] = l;
                };
            ]]>
            </Parameter>
            <Parameter Name="Validation.Type">epsilon</Parameter>
            <Parameter Name="Validation.Tolerance">0.0008</Parameter>
            <Parameter Name="Validation.Input1">
                <Value>NaN</Value>
                <Value>-Inf</Value>
                <Value>-denorm</Value>
                <Value>-0</Value>
                <Value>0</Value>
                <Value>denorm</Value>
                <Value>Inf</Value>
                <Value>1.0</Value>
                <Value>-1.0</Value>
                <Value>0</Value>
                <Value>1</Value>
                <Value>1.5</Value>
            </Parameter>
            <Parameter Name="Validation.Input2">
                <Value>NaN</Value>
                <Value>-Inf</Value>
                <Value>-denorm</Value>
                <Value>-0</Value>
                <Value>0</Value>
                <Value>denorm</Value>
                <Value>Inf</Value>
                <Value>1.0</Value>
                <Value>-1.0</Value>
                <Value>0</Value>
                <Value>1</Value>
                <Value>10</Value>
            </Parameter>
            <Parameter Name="Validation.Input3">
                <Value>NaN</Value>
                <Value>-Inf</Value>
                <Value>-denorm</Value>
                <Value>-0</Value>
                <Value>0</Value>
                <Value>denorm</Value>
                <Value>Inf</Value>
                <Value>1.0</Value>
                <Value>-1.0</Value>
                <Value>1</Value>
                <Value>0</Value>
                <Value>-5.5</Value>
            </Parameter>

            <Parameter Name="Validation.Expected">
                <Value>NaN</Value>
                <Value>NaN</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>Inf</Value>
                <Value>2</Value>
                <Value>0</Value>
                <Value>1</Value>
                <Value>1</Value>
                <Value>9.5</Value>
            </Parameter>
            <Parameter Name="Validation.NumInput">12</Parameter>
      </Row>
      </Table>

    <Table Id="UnaryIntOpTable">
      <ParameterTypes>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
        <ParameterType Name="Validation.Input" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Expected" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Tolerance">int</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
      </ParameterTypes>

      <Row Name="Bfrev">
        <Parameter Name="ShaderOp.Name">bfrev</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SUnaryIntOp {
                int input;
                int output;
            };
            RWStructuredBuffer<SUnaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryIntOp l = g_buf[GI];
                l.output = reversebits(l.input);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>

        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
            <Value>-2147483648</Value>
            <Value>-65536</Value>
            <Value>-8</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>8</Value>
            <Value>65536</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
            <Value>1</Value>
            <Value>65535</Value>
            <Value>536870911</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>-2147483648</Value>
            <Value>268435456</Value>
            <Value>32768</Value>
            <Value>-2</Value>
        </Parameter>
      </Row>

      <Row Name="FirstbitSHi">
        <Parameter Name="ShaderOp.Name">Firstbithi</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SUnaryIntOp {
                int input;
                int output;
            };
            RWStructuredBuffer<SUnaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryIntOp l = g_buf[GI];
                l.output = firstbithigh(l.input);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>

        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
            <Value>-2147483648</Value>
            <Value>-65536</Value>
            <Value>-8</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>8</Value>
            <Value>65536</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
            <Value>30</Value>
            <Value>15</Value>
            <Value>2</Value>
            <Value>-1</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>3</Value>
            <Value>16</Value>
            <Value>30</Value>
        </Parameter>
      </Row>

      <Row Name="FirstBitLo">
        <Parameter Name="ShaderOp.Name">Firstbitlo</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SUnaryIntOp {
                int input;
                int output;
            };
            RWStructuredBuffer<SUnaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryIntOp l = g_buf[GI];
                l.output = firstbitlow(l.input);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>

        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
            <Value>-2147483648</Value>
            <Value>-65536</Value>
            <Value>-8</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>8</Value>
            <Value>65536</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
            <Value>31</Value>
            <Value>16</Value>
            <Value>3</Value>
            <Value>0</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>3</Value>
            <Value>16</Value>
            <Value>0</Value>
        </Parameter>
      </Row>

      <Row Name="Countbits">
        <Parameter Name="ShaderOp.Name">Countbits</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SUnaryIntOp {
                int input;
                int output;
            };
            RWStructuredBuffer<SUnaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryIntOp l = g_buf[GI];
                l.output = countbits(l.input);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>

        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input">
            <Value>-2147483648</Value>
            <Value>-65536</Value>
            <Value>-8</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>8</Value>
            <Value>65536</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
            <Value>1</Value>
            <Value>16</Value>
            <Value>29</Value>
            <Value>32</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>1</Value>
            <Value>1</Value>
            <Value>31</Value>
        </Parameter>
      </Row>
    </Table>

    <Table Id="UnaryUintOpTable">
      <ParameterTypes>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
        <ParameterType Name="Validation.Input" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Expected" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Tolerance">int</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
      </ParameterTypes>

      <Row Name="FirstbitHi">
        <Parameter Name="ShaderOp.Name">Firstbithi</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SUnaryUintOp {
                uint input;
                uint output;
            };
            RWStructuredBuffer<SUnaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SUnaryUintOp l = g_buf[GI];
                l.output = firstbithigh(l.input);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input">
            <Value>0</Value>
            <Value>1</Value>
            <Value>8</Value>
            <Value>65536</Value>
            <Value>2147483647</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Expected">
            <Value>-1</Value>
            <Value>0</Value>
            <Value>3</Value>
            <Value>16</Value>
            <Value>30</Value>
            <Value>31</Value>
        </Parameter>
      </Row>
    </Table>

    <Table Id="BinaryIntOpTable">
      <ParameterTypes>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
        <ParameterType Name="Validation.NumExpected">int</ParameterType>
        <ParameterType Name="Validation.Input1" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Input2" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Expected1" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Expected2" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Tolerance">int</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
      </ParameterTypes>

      <Row Name="IMax">
        <Parameter Name="ShaderOp.Name">IMax</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryIntOp {
                int input1;
                int input2;
                int output1;
                int output2;
            };
            RWStructuredBuffer<SBinaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryIntOp l = g_buf[GI];
                l.output1 = max(l.input1, l.input2);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>-2147483648</Value>
            <Value>-10</Value>
            <Value>0</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>10</Value>
            <Value>-10</Value>
            <Value>10</Value>
            <Value>10</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0</Value>
            <Value>10</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>10</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>
      <Row Name="IMin">
        <Parameter Name="ShaderOp.Name">IMin</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryIntOp {
                int input1;
                int input2;
                int output1;
                int output2;
            };
            RWStructuredBuffer<SBinaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryIntOp l = g_buf[GI];
                l.output1 = min(l.input1, l.input2);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>-2147483648</Value>
            <Value>-10</Value>
            <Value>0</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>10</Value>
            <Value>-10</Value>
            <Value>10</Value>
            <Value>10</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>-2147483648</Value>
            <Value>-10</Value>
            <Value>-10</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>
      <Row Name="IMul">
        <Parameter Name="ShaderOp.Name">Mul</Parameter>
        <Parameter Name="ShaderOp.Description">integer multiplication. Note that this calls llvm "mul" operation and not IMul</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryIntOp {
                int input1;
                int input2;
                int output1;
                int output2;
            };
            RWStructuredBuffer<SBinaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryIntOp l = g_buf[GI];
                l.output1 = l.input1 * l.input2;
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">9</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>-2147483648</Value>
            <Value>-10</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>10</Value>
            <Value>10000</Value>
            <Value>2147483647</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>-10</Value>
            <Value>-10</Value>
            <Value>10</Value>
            <Value>0</Value>
            <Value>256</Value>
            <Value>4</Value>
            <Value>10001</Value>
            <Value>0</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0</Value>
            <Value>100</Value>
            <Value>-10</Value>
            <Value>0</Value>
            <Value>256</Value>
            <Value>40</Value>
            <Value>100010000</Value>
            <Value>0</Value>
            <Value>1</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>
    </Table>

    <Table Id="BinaryUintOpTable">
      <ParameterTypes>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
        <ParameterType Name="Validation.NumExpected">int</ParameterType>
        <ParameterType Name="Validation.Input1" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Input2" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Expected1" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Expected2" Array="true">unsigned int</ParameterType>
        <ParameterType Name="Validation.Tolerance">int</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
      </ParameterTypes>
      <Row Name="UMax">
        <Parameter Name="ShaderOp.Name">UMax</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryUintOp {
                uint input1;
                uint input2;
                uint output1;
                uint output2;
            };
            RWStructuredBuffer<SBinaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryUintOp l = g_buf[GI];
                l.output1 = max(l.input1, l.input2);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>0</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>10000</Value>
            <Value>2147483647</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>256</Value>
            <Value>4</Value>
            <Value>10001</Value>
            <Value>0</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0</Value>
            <Value>256</Value>
            <Value>10</Value>
            <Value>10001</Value>
            <Value>2147483647</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>
      <Row Name="UMin">
        <Parameter Name="ShaderOp.Name">UMin</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryUintOp {
                uint input1;
                uint input2;
                uint output1;
                uint output2;
            };
            RWStructuredBuffer<SBinaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryUintOp l = g_buf[GI];
                l.output1 = min(l.input1, l.input2);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>0</Value>
            <Value>0</Value>
            <Value>10</Value>
            <Value>10000</Value>
            <Value>2147483647</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>256</Value>
            <Value>4</Value>
            <Value>10001</Value>
            <Value>0</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0</Value>
            <Value>0</Value>
            <Value>4</Value>
            <Value>10000</Value>
            <Value>0</Value>
            <Value>4294967295</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>

      <Row Name="UMul">
        <Parameter Name="ShaderOp.Name">Mul</Parameter>
        <Parameter Name="ShaderOp.Description">integer multiplication. Note that this calls llvm "mul" operation and not IMul</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryUintOp {
                uint input1;
                uint input2;
                uint output1;
                uint output2;
            };
            RWStructuredBuffer<SBinaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryUintOp l = g_buf[GI];
                l.output1 = l.input1 * l.input2;
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.NumExpected">1</Parameter>
        <Parameter Name="Validation.NumInput">5</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>0</Value>
            <Value>1</Value>
            <Value>10</Value>
            <Value>10000</Value>
            <Value>2147483647</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>256</Value>
            <Value>4</Value>
            <Value>10001</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0</Value>
            <Value>256</Value>
            <Value>40</Value>
            <Value>100010000</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>

      <Row Name="UDiv">
        <Parameter Name="ShaderOp.Name">UDiv</Parameter>
        <Parameter Name="ShaderOp.Description">integer division. Note that this calls llvm "div" and "rem" operations and not UDiv</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryUintOp {
                uint input1;
                uint input2;
                uint output1;
                uint output2;
            };
            RWStructuredBuffer<SBinaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryUintOp l = g_buf[GI];
                l.output1 = l.input1 / l.input2;
                l.output2 = l.input1 % l.input2;
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Operation.Unsigned">true</Parameter>
        <Parameter Name="Validation.NumExpected">2</Parameter>
        <Parameter Name="Validation.NumInput">7</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>1</Value>
            <Value>1</Value>
            <Value>10</Value>
            <Value>10000</Value>
            <Value>2147483647</Value>
            <Value>2147483647</Value>
            <Value>0xffffffff</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>256</Value>
            <Value>4</Value>
            <Value>10001</Value>
            <Value>0</Value>
            <Value>2147483647</Value>
            <Value>1</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>0xffffffff</Value>
            <Value>0</Value>
            <Value>2</Value>
            <Value>0</Value>
            <Value>0xffffffff</Value>
            <Value>1</Value>
            <Value>0xffffffff</Value>
        </Parameter>
        <Parameter Name="Validation.Expected2">
            <Value>0xffffffff</Value>
            <Value>1</Value>
            <Value>2</Value>
            <Value>10000</Value>
            <Value>0xffffffff</Value>
            <Value>0</Value>
            <Value>0</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>

       <Row Name="UAddc">
        <Parameter Name="ShaderOp.Name">UAddc</Parameter>
        <Parameter Name="ShaderOp.Description">UAddc is called through AddUint64 intrinsic</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct SBinaryUintOp {
                uint input1;
                uint input2;
                uint output1;
                uint output2;
            };
            RWStructuredBuffer<SBinaryUintOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                SBinaryUintOp l = g_buf[GI];
                uint2 x = uint2(l.input1, l.input2);
                uint2 y = AddUint64(x, x);
                l.output1 = y.x;
                l.output2 = y.y;
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Operation.Unsigned">true</Parameter>
        <Parameter Name="Validation.NumExpected">2</Parameter>
        <Parameter Name="Validation.NumInput">6</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>1</Value>
            <Value>1</Value>
            <Value>10000</Value>
            <Value>0x80000000</Value>
            <Value>0x7fffffff</Value>
            <Value>0xffffffff</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>0</Value>
            <Value>256</Value>
            <Value>10001</Value>
            <Value>1</Value>
            <Value>0x7fffffff</Value>
            <Value>0x7fffffff</Value>
        </Parameter>
        <Parameter Name="Validation.Expected1">
            <Value>2</Value>
            <Value>2</Value>
            <Value>20000</Value>
            <Value>0</Value>
            <Value>0xfffffffe</Value>
            <Value>0xfffffffe</Value>
        </Parameter>
        <Parameter Name="Validation.Expected2">
            <Value>0</Value>
            <Value>512</Value>
            <Value>20002</Value>
            <Value>3</Value>
            <Value>0xfffffffe</Value>
            <Value>0xffffffff</Value>
        </Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
      </Row>
    </Table>

    <Table Id="TertiaryIntOpTable">
      <ParameterTypes>
        <ParameterType Name="Description">String</ParameterType>
        <ParameterType Name="ShaderOp.Name">String</ParameterType>
        <ParameterType Name="ShaderOp.Target">String</ParameterType>
        <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
        <ParameterType Name="ShaderOp.Text">String</ParameterType>
        <ParameterType Name="Validation.Type">String</ParameterType>
        <ParameterType Name="Validation.Tolerance">int</ParameterType>
        <ParameterType Name="Validation.Input1" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Input2" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Input3" Array="true">int</ParameterType>
        <ParameterType Name="Validation.Expected" Array="true">int</ParameterType>
        <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
      </ParameterTypes>

      <Row Name="IMad">
        <Parameter Name="ShaderOp.Name">msad4</Parameter>
        <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
        <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
        <Parameter Name="ShaderOp.Text">
        <![CDATA[
            struct STertiaryIntOp {
                int input1;
                int input2;
                int input3;
                int output;
            };
            RWStructuredBuffer<STertiaryIntOp> g_buf : register(u0);
            [numthreads(8,8,1)]
            void main(uint GI : SV_GroupIndex) {
                STertiaryIntOp l = g_buf[GI];
                l.output = mad(l.input1, l.input2, l.input3);
                g_buf[GI] = l;
            };
        ]]>
        </Parameter>
        <Parameter Name="Validation.Type">epsilon</Parameter>
        <Parameter Name="Validation.Tolerance">0</Parameter>
        <Parameter Name="Validation.Input1">
            <Value>-2147483647</Value>
            <Value>-256</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>2</Value>
            <Value>16</Value>
            <Value>2147483647</Value>
            <Value>1</Value>
            <Value>-1</Value>
            <Value>1</Value>
            <Value>10</Value>
        </Parameter>
        <Parameter Name="Validation.Input2">
            <Value>1</Value>
            <Value>-256</Value>
            <Value>-1</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>3</Value>
            <Value>16</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>-1</Value>
            <Value>10</Value>
            <Value>100</Value>
        </Parameter>
        <Parameter Name="Validation.Input3">
            <Value>0</Value>
            <Value>0</Value>
            <Value>0</Value>
            <Value>0</Value>
            <Value>1</Value>
            <Value>3</Value>
            <Value>1</Value>
            <Value>255</Value>
            <Value>2147483646</Value>
            <Value>-2147483647</Value>
            <Value>-10</Value>
            <Value>-2000</Value>
        </Parameter>

        <Parameter Name="Validation.Expected">
            <Value>-2147483647</Value>
            <Value>65536</Value>
            <Value>1</Value>
            <Value>0</Value>
            <Value>2</Value>
            <Value>9</Value>
            <Value>257</Value>
            <Value>255</Value>
            <Value>2147483647</Value>
            <Value>-2147483646</Value>
            <Value>0</Value>
            <Value>-1000</Value>
        </Parameter>
        <Parameter Name="Validation.NumInput">12</Parameter>
      </Row>
      </Table>

      <Table Id="TertiaryUintOpTable">
        <ParameterTypes>
            <ParameterType Name="Description">String</ParameterType>
            <ParameterType Name="ShaderOp.Name">String</ParameterType>
            <ParameterType Name="ShaderOp.Target">String</ParameterType>
            <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
            <ParameterType Name="ShaderOp.Text">String</ParameterType>
            <ParameterType Name="Validation.Type">String</ParameterType>
            <ParameterType Name="Validation.Tolerance">int</ParameterType>
            <ParameterType Name="Validation.Input1" Array="true">int</ParameterType>
            <ParameterType Name="Validation.Input2" Array="true">int</ParameterType>
            <ParameterType Name="Validation.Input3" Array="true">int</ParameterType>
            <ParameterType Name="Validation.Expected" Array="true">int</ParameterType>
            <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        </ParameterTypes>

        <Row Name="UMad">
            <Parameter Name="ShaderOp.Name">UMad</Parameter>
            <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
            <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
            <Parameter Name="ShaderOp.Text">
            <![CDATA[
                struct STertiaryUintOp {
                    uint input1;
                    uint input2;
                    uint input3;
                    uint output;
                };
                RWStructuredBuffer<STertiaryUintOp> g_buf : register(u0);
                [numthreads(8,8,1)]
                void main(uint GI : SV_GroupIndex) {
                    STertiaryUintOp l = g_buf[GI];
                    l.output = mad(l.input1, l.input2, l.input3);
                    g_buf[GI] = l;
                };
            ]]>
            </Parameter>
            <Parameter Name="Validation.Type">epsilon</Parameter>
            <Parameter Name="Validation.Tolerance">0</Parameter>
            <Parameter Name="Validation.Input1">
                <Value>0</Value>
                <Value>1</Value>
                <Value>2</Value>
                <Value>16</Value>
                <Value>2147483647</Value>
                <Value>0</Value>
                <Value>10</Value>
            </Parameter>
            <Parameter Name="Validation.Input2">
                <Value>0</Value>
                <Value>1</Value>
                <Value>2</Value>
                <Value>16</Value>
                <Value>1</Value>
                <Value>0</Value>
                <Value>10</Value>
            </Parameter>
            <Parameter Name="Validation.Input3">
                <Value>0</Value>
                <Value>0</Value>
                <Value>1</Value>
                <Value>15</Value>
                <Value>0</Value>
                <Value>10</Value>
                <Value>10</Value>
            </Parameter>

            <Parameter Name="Validation.Expected">
                <Value>0</Value>
                <Value>1</Value>
                <Value>5</Value>
                <Value>271</Value>
                <Value>2147483647</Value>
                <Value>10</Value>
                <Value>110</Value>
            </Parameter>
            <Parameter Name="Validation.NumInput">7</Parameter>
      </Row>
      </Table>

      <Table Id="DotOpTable">
        <ParameterTypes>
            <ParameterType Name="Description">String</ParameterType>
            <ParameterType Name="ShaderOp.Name">String</ParameterType>
            <ParameterType Name="ShaderOp.Target">String</ParameterType>
            <ParameterType Name="ShaderOp.EntryPoint">String</ParameterType>
            <ParameterType Name="ShaderOp.Text">String</ParameterType>
            <ParameterType Name="Validation.Type">String</ParameterType>
            <ParameterType Name="Validation.Tolerance">int</ParameterType>
            <ParameterType Name="Validation.Input1" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Input2" Array="true">String</ParameterType>
            <ParameterType Name="Validation.dot2" Array="true">String</ParameterType>
            <ParameterType Name="Validation.dot3" Array="true">String</ParameterType>
            <ParameterType Name="Validation.dot4" Array="true">String</ParameterType>
            <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        </ParameterTypes>

        <Row Name="Dot">
            <Parameter Name="ShaderOp.Name">Dot</Parameter>
            <Parameter Name="ShaderOp.Target">cs_6_0</Parameter>
            <Parameter Name="ShaderOp.EntryPoint">main</Parameter>
            <Parameter Name="ShaderOp.Text">
            <![CDATA[
                struct SDotOp {
                   float4 input1;
                   float4 input2;
                   float o_dot2;
                   float o_dot3;
                   float o_dot4;
                };
                RWStructuredBuffer<SDotOp> g_buf : register(u0);
                [numthreads(8,8,1)]
                void main(uint GI : SV_GroupIndex) {
                    SDotOp l = g_buf[GI];
                    l.o_dot2 = dot(l.input1.xy, l.input2.xy);
                    l.o_dot3 = dot(l.input1.xyz, l.input2.xyz);
                    l.o_dot4 = dot(l.input1.xyzw, l.input2.xyzw);
                    g_buf[GI] = l;
                };
            ]]>
            </Parameter>
            <Parameter Name="Validation.Type">epsilon</Parameter>
            <Parameter Name="Validation.Tolerance">0.008</Parameter>
            <Parameter Name="Validation.Input1">
                <Value>NaN,NaN,NaN,NaN</Value>
                <Value>-Inf,-Inf,-Inf,-Inf</Value>
                <Value>-denorm,-denorm,-denorm,-denorm</Value>
                <Value>-0,-0,-0,-0</Value>
                <Value>0,0,0,0</Value>
                <Value>denorm,denorm,denorm,denorm</Value>
                <Value>Inf,Inf,Inf,Inf</Value>
                <Value>1,1,1,1</Value>
                <Value>-10,0,0,10</Value>
                <Value>Inf,Inf,Inf,-Inf</Value>
            </Parameter>
            <Parameter Name="Validation.Input2">
                <Value>NaN,NaN,NaN,NaN</Value>
                <Value>-Inf,-Inf,-Inf,-Inf</Value>
                <Value>-denorm,-denorm,-denorm,-denorm</Value>
                <Value>-0,-0,-0,-0</Value>
                <Value>0,0,0,0</Value>
                <Value>denorm,denorm,denorm,denorm</Value>
                <Value>Inf,Inf,Inf,Inf</Value>
                <Value>1,1,1,1</Value>
                <Value>10,0,0,10</Value>
                <Value>Inf,Inf,Inf,Inf</Value>
            </Parameter>
            <Parameter Name="Validation.dot2">
                <Value>NaN</Value>
                <Value>Inf</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>Inf</Value>
                <Value>2</Value>
                <Value>-100</Value>
                <Value>Inf</Value>
            </Parameter>
            <Parameter Name="Validation.dot3">
                <Value>NaN</Value>
                <Value>Inf</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>Inf</Value>
                <Value>3</Value>
                <Value>-100</Value>
                <Value>Inf</Value>
            </Parameter>
            <Parameter Name="Validation.dot4">
                <Value>NaN</Value>
                <Value>Inf</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>0</Value>
                <Value>Inf</Value>
                <Value>4</Value>
                <Value>0</Value>
                <Value>NaN</Value>
            </Parameter>
            <Parameter Name="Validation.NumInput">10</Parameter>
        </Row>
      </Table>

      <Table Id="MSad4Table">
        <ParameterTypes>
            <ParameterType Name="Description">String</ParameterType>
            <ParameterType Name="ShaderOp.Text">String</ParameterType>
            <ParameterType Name="Validation.Tolerance">int</ParameterType>
            <ParameterType Name="Validation.Reference" Array="true">unsigned int</ParameterType>
            <ParameterType Name="Validation.Source" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Accum" Array="true">String</ParameterType>
            <ParameterType Name="Validation.Expected" Array="true">String</ParameterType>
            <ParameterType Name="Validation.NumInput">unsigned int</ParameterType>
        </ParameterTypes>
        <Row Name="MSad4">
            <Parameter Name="Description">Msad4 intrinsic calls both Bfi and Msad</Parameter>
            <Parameter Name="ShaderOp.Text">
                <![CDATA[
                    struct SMsad4 {
                        uint ref;
                        uint2 source;
                        uint4 accum;
                        uint4 result;
                    };
                    RWStructuredBuffer<SMsad4> g_buf : register(u0);
                    [numthreads(8,8,1)]
                    void main(uint GI : SV_GroupIndex) {
                        SMsad4 l = g_buf[GI];
                        l.result = msad4(l.ref, l.source, l.accum);
                        g_buf[GI] = l;
                    }
                ]]>
            </Parameter>
            <Parameter Name="Validation.Tolerance">0</Parameter>
            <Parameter Name="Validation.NumInput">4</Parameter>
            <Parameter Name="Validation.Reference">
                <Value>0xA100B2C3</Value>
                <Value>0x00000000</Value>
                <Value>0xFFFF01C1</Value>
                <Value>0xFFFFFFFF</Value>
            </Parameter>
            <Parameter Name="Validation.Source">
                <Value>0xD7B0C372, 0x4F57C2A3</Value>
                <Value>0xFFFFFFFF, 0x00000000</Value>
                <Value>0x38A03AEF, 0x38194DA3</Value>
                <Value>0xFFFFFFFF, 0x00000000</Value>
            </Parameter>
            <Parameter Name="Validation.Accum">
                <Value>1,2,3,4</Value>
                <Value>1,2,3,4</Value>
                <Value>0,0,0,0</Value>
                <Value>10,10,10,10</Value>
            </Parameter>
            <Parameter Name="Validation.Expected">
                <Value>153,6,92,113</Value>
                <Value>1,2,3,4</Value>
                <Value>397,585,358,707</Value>
                <Value>10,265,520,775</Value>
            </Parameter>
        </Row>
       </Table>
</Data>